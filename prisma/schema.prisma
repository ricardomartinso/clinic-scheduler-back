// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  clinic Clinic[]

  @@map("users")
}

model Patient {
  id Int @id @default(autoincrement())
  name String
  email String? @unique
  cpf Int? @unique
  health_insurance String?
  birth_date DateTime? @db.Date
  clinic_id Int

  clinic Clinic @relation(fields: [clinic_id], references: [id])
  consultations Consultation[]
  phone Phone[]
  address Address[]

  @@map("patients")
}

model Phone {
  id Int @id @default(autoincrement())
  number String @unique
  patientId Int

  patient Patient @relation(fields: [patientId], references: [id])

  @@map("phones")
}

model Address {
  id Int @id @default(autoincrement())
  street String
  street_number Int
  district String
  cep Int
  patientId Int
  patient Patient @relation(fields: [patientId], references: [id])


  @@map("address")
}
enum ConsultationTurn {
  manha
  tarde

  @@map("consultation_turn")
}

model Consultation {
  id Int @id @default(autoincrement())
  patientName String
  health_insurance String?
  patient_id Int
  clinic_id Int
  consultation_date DateTime @db.Date()
  consultation_turn ConsultationTurn
  
  clinic Clinic @relation(fields: [clinic_id], references: [id])
  patient Patient @relation(fields: [patient_id], references: [id])
  treatments Treatments[]

  @@map("consultations")
}

model Treatments {
  id Int @id @default(autoincrement())
  description String
  consultation_id Int
  consultation Consultation @relation(fields: [consultation_id], references: [id])

  @@map("treatments")
}

model Clinic {
  id Int @id @default(autoincrement())
  name String
  userId Int
  user User @relation(fields: [userId],references: [id])


  consultations Consultation[]
  patients Patient[]

  @@map("clinic")
}